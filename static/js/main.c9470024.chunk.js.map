{"version":3,"sources":["App.tsx","index.tsx"],"names":["getRandomName","value","Date","now","toString","slice","Clock","timerId","state","time","toUTCString","this","window","setInterval","currentTime","setState","console","info","prevProps","name","props","debug","clearInterval","visible","className","React","Component","App","hasClock","clockName","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"yLAYA,SAASA,IACP,IAAMC,EAAQC,KAAKC,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBJ,G,IAGZK,E,4MACJC,QAAyB,K,EAEzBC,MAAoB,CAClBC,MAAM,IAAIP,MAAOQ,cAAcL,OAAO,IAAK,I,uDAG7C,WAAqB,IAAD,OAClBM,KAAKJ,QAAUK,OAAOC,aAAY,WAChC,IAAMC,GAAc,IAAIZ,MAAOQ,cAAcL,OAAO,IAAK,GAEzD,EAAKU,SAAS,CACZN,KAAMK,IAGRE,QAAQC,KAAKH,KACZ,O,gCAGL,SAAmBI,GACbA,EAAUC,OAASR,KAAKS,MAAMD,MAEhCH,QAAQK,MAAR,uBAA8BH,EAAUC,KAAxC,eAAmDR,KAAKS,MAAMD,S,kCAIlE,WACuB,OAAjBR,KAAKJ,SACPe,cAAcX,KAAKJ,W,oBAIvB,WACE,OAAOI,KAAKS,MAAMG,QAChB,sBAAKC,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SAAiCb,KAAKS,MAAMD,OAC3C,YACD,sBAAMK,UAAU,cAAhB,SAA+Bb,KAAKH,MAAMC,UAE1C,S,GAvCYgB,IAAMC,WAgDpBC,E,4MACJpB,QAAyB,K,EAEzBC,MAAkB,CAChBoB,UAAU,EACVC,UAAW,W,uDAGb,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKlB,SAAS,CAAEa,UAAU,OAG5BE,SAASC,iBAAiB,SAAS,WACjC,EAAKhB,SAAS,CAAEa,UAAU,OAG5BjB,KAAKJ,QAAUK,OAAOC,aAAY,WAChC,EAAKE,SAAS,CAAEc,UAAW7B,QAC1B,Q,kCAGL,WAAwB,IAAD,EACrBsB,cAAa,UAACX,KAAKJ,eAAN,QAAiB,K,oBAGhC,WACE,OACE,sBAAKiB,UAAU,MAAf,UACE,6CACA,cAAC,EAAD,CAAOL,KAAMR,KAAKH,MAAMqB,UAAWN,QAASZ,KAAKH,MAAMoB,kB,GA/B7CH,IAAMC,WC/DxBQ,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.c9470024.chunk.js","sourcesContent":["// eslint-disable-next-line max-classes-per-file\nimport React from 'react';\n\ninterface ClockProps {\n  name: string;\n  visible: boolean;\n}\n\ninterface ClockState {\n  time: string;\n}\n\nfunction getRandomName() {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nclass Clock extends React.Component<ClockProps, ClockState> {\n  timerId: number | null = null;\n\n  state: ClockState = {\n    time: new Date().toUTCString().slice(-12, -4),\n  };\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const currentTime = new Date().toUTCString().slice(-12, -4);\n\n      this.setState({\n        time: currentTime,\n      });\n      // eslint-disable-next-line no-console\n      console.info(currentTime);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: ClockProps) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId !== null) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    return this.props.visible ? (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">{this.props.name}</strong>\n        {' time is '}\n        <span className=\"Clock__time\">{this.state.time}</span>\n      </div>\n    ) : null;\n  }\n}\n\ninterface AppState {\n  hasClock: boolean;\n  clockName: string;\n}\n\nclass App extends React.Component<{}, AppState> {\n  timerId: number | null = null;\n\n  state: AppState = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId ?? 0);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <Clock name={this.state.clockName} visible={this.state.hasClock} />\n      </div>\n    );\n  }\n}\n\nexport { App };\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}